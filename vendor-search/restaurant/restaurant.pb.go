// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: vendor-search/restaurant/restaurant.proto

package restaurant

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Restaurant_Metadata_ActionType int32

const (
	Restaurant_Metadata_CREATE Restaurant_Metadata_ActionType = 0
	Restaurant_Metadata_UPDATE Restaurant_Metadata_ActionType = 1
	Restaurant_Metadata_DELETE Restaurant_Metadata_ActionType = 2
)

// Enum value maps for Restaurant_Metadata_ActionType.
var (
	Restaurant_Metadata_ActionType_name = map[int32]string{
		0: "CREATE",
		1: "UPDATE",
		2: "DELETE",
	}
	Restaurant_Metadata_ActionType_value = map[string]int32{
		"CREATE": 0,
		"UPDATE": 1,
		"DELETE": 2,
	}
)

func (x Restaurant_Metadata_ActionType) Enum() *Restaurant_Metadata_ActionType {
	p := new(Restaurant_Metadata_ActionType)
	*p = x
	return p
}

func (x Restaurant_Metadata_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Restaurant_Metadata_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_vendor_search_restaurant_restaurant_proto_enumTypes[0].Descriptor()
}

func (Restaurant_Metadata_ActionType) Type() protoreflect.EnumType {
	return &file_vendor_search_restaurant_restaurant_proto_enumTypes[0]
}

func (x Restaurant_Metadata_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Restaurant_Metadata_ActionType.Descriptor instead.
func (Restaurant_Metadata_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_vendor_search_restaurant_restaurant_proto_rawDescGZIP(), []int{0, 0, 0}
}

type Restaurant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata              *Restaurant_Metadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id                    int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Enabled               bool                   `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LogoUrl               string                 `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	CountryId             int32                  `protobuf:"varint,8,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	NameAr                string                 `protobuf:"bytes,9,opt,name=name_ar,json=nameAr,proto3" json:"name_ar,omitempty"`
	Minordervalue         float32                `protobuf:"fixed32,10,opt,name=minordervalue,proto3" json:"minordervalue,omitempty"`
	Contact               string                 `protobuf:"bytes,11,opt,name=contact,proto3" json:"contact,omitempty"`
	Description           string                 `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	DescriptionAr         string                 `protobuf:"bytes,13,opt,name=description_ar,json=descriptionAr,proto3" json:"description_ar,omitempty"`
	Slug                  string                 `protobuf:"bytes,14,opt,name=slug,proto3" json:"slug,omitempty"`
	Featured              bool                   `protobuf:"varint,15,opt,name=featured,proto3" json:"featured,omitempty"`
	Weight                int32                  `protobuf:"zigzag32,16,opt,name=weight,proto3" json:"weight,omitempty"`
	CompanyId             int32                  `protobuf:"varint,17,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	WorkingTimeId         int32                  `protobuf:"varint,18,opt,name=working_time_id,json=workingTimeId,proto3" json:"working_time_id,omitempty"`
	BillingGroupId        int32                  `protobuf:"varint,19,opt,name=billing_group_id,json=billingGroupId,proto3" json:"billing_group_id,omitempty"`
	ExternalServiceHostId int32                  `protobuf:"varint,20,opt,name=external_service_host_id,json=externalServiceHostId,proto3" json:"external_service_host_id,omitempty"`
	SubWorkingTimeId      int32                  `protobuf:"varint,21,opt,name=sub_working_time_id,json=subWorkingTimeId,proto3" json:"sub_working_time_id,omitempty"`
	LogoArUrl             string                 `protobuf:"bytes,22,opt,name=logo_ar_url,json=logoArUrl,proto3" json:"logo_ar_url,omitempty"`
	Grade                 float64                `protobuf:"fixed64,23,opt,name=grade,proto3" json:"grade,omitempty"`
	Bias                  int32                  `protobuf:"varint,24,opt,name=bias,proto3" json:"bias,omitempty"`
	BackgroundUrl         string                 `protobuf:"bytes,25,opt,name=background_url,json=backgroundUrl,proto3" json:"background_url,omitempty"`
	Sponsorship           int32                  `protobuf:"varint,26,opt,name=sponsorship,proto3" json:"sponsorship,omitempty"`
	SlaDashboard          bool                   `protobuf:"varint,27,opt,name=sla_dashboard,json=slaDashboard,proto3" json:"sla_dashboard,omitempty"`
	CoverPhotoUrl         string                 `protobuf:"bytes,28,opt,name=cover_photo_url,json=coverPhotoUrl,proto3" json:"cover_photo_url,omitempty"`
	SlugAr                string                 `protobuf:"bytes,29,opt,name=slug_ar,json=slugAr,proto3" json:"slug_ar,omitempty"`
	VatApplied            bool                   `protobuf:"varint,30,opt,name=vat_applied,json=vatApplied,proto3" json:"vat_applied,omitempty"`
	BrandId               int32                  `protobuf:"varint,31,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	StoreTypeId           int32                  `protobuf:"varint,32,opt,name=store_type_id,json=storeTypeId,proto3" json:"store_type_id,omitempty"`
	IosCoverPhotoUrl      string                 `protobuf:"bytes,33,opt,name=ios_cover_photo_url,json=iosCoverPhotoUrl,proto3" json:"ios_cover_photo_url,omitempty"`
	AndroidCoverPhotoUrl  string                 `protobuf:"bytes,34,opt,name=android_cover_photo_url,json=androidCoverPhotoUrl,proto3" json:"android_cover_photo_url,omitempty"`
	EnabledReason         int32                  `protobuf:"varint,35,opt,name=enabled_reason,json=enabledReason,proto3" json:"enabled_reason,omitempty"`
	RestaurantType        int32                  `protobuf:"varint,36,opt,name=restaurant_type,json=restaurantType,proto3" json:"restaurant_type,omitempty"`
	VerticalId            int32                  `protobuf:"varint,37,opt,name=vertical_id,json=verticalId,proto3" json:"vertical_id,omitempty"`
	DisableOrderNote      bool                   `protobuf:"varint,38,opt,name=disable_order_note,json=disableOrderNote,proto3" json:"disable_order_note,omitempty"`
}

func (x *Restaurant) Reset() {
	*x = Restaurant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vendor_search_restaurant_restaurant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Restaurant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Restaurant) ProtoMessage() {}

func (x *Restaurant) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_search_restaurant_restaurant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Restaurant.ProtoReflect.Descriptor instead.
func (*Restaurant) Descriptor() ([]byte, []int) {
	return file_vendor_search_restaurant_restaurant_proto_rawDescGZIP(), []int{0}
}

func (x *Restaurant) GetMetadata() *Restaurant_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Restaurant) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Restaurant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Restaurant) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Restaurant) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Restaurant) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Restaurant) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *Restaurant) GetCountryId() int32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *Restaurant) GetNameAr() string {
	if x != nil {
		return x.NameAr
	}
	return ""
}

func (x *Restaurant) GetMinordervalue() float32 {
	if x != nil {
		return x.Minordervalue
	}
	return 0
}

func (x *Restaurant) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *Restaurant) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Restaurant) GetDescriptionAr() string {
	if x != nil {
		return x.DescriptionAr
	}
	return ""
}

func (x *Restaurant) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Restaurant) GetFeatured() bool {
	if x != nil {
		return x.Featured
	}
	return false
}

func (x *Restaurant) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Restaurant) GetCompanyId() int32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *Restaurant) GetWorkingTimeId() int32 {
	if x != nil {
		return x.WorkingTimeId
	}
	return 0
}

func (x *Restaurant) GetBillingGroupId() int32 {
	if x != nil {
		return x.BillingGroupId
	}
	return 0
}

func (x *Restaurant) GetExternalServiceHostId() int32 {
	if x != nil {
		return x.ExternalServiceHostId
	}
	return 0
}

func (x *Restaurant) GetSubWorkingTimeId() int32 {
	if x != nil {
		return x.SubWorkingTimeId
	}
	return 0
}

func (x *Restaurant) GetLogoArUrl() string {
	if x != nil {
		return x.LogoArUrl
	}
	return ""
}

func (x *Restaurant) GetGrade() float64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *Restaurant) GetBias() int32 {
	if x != nil {
		return x.Bias
	}
	return 0
}

func (x *Restaurant) GetBackgroundUrl() string {
	if x != nil {
		return x.BackgroundUrl
	}
	return ""
}

func (x *Restaurant) GetSponsorship() int32 {
	if x != nil {
		return x.Sponsorship
	}
	return 0
}

func (x *Restaurant) GetSlaDashboard() bool {
	if x != nil {
		return x.SlaDashboard
	}
	return false
}

func (x *Restaurant) GetCoverPhotoUrl() string {
	if x != nil {
		return x.CoverPhotoUrl
	}
	return ""
}

func (x *Restaurant) GetSlugAr() string {
	if x != nil {
		return x.SlugAr
	}
	return ""
}

func (x *Restaurant) GetVatApplied() bool {
	if x != nil {
		return x.VatApplied
	}
	return false
}

func (x *Restaurant) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *Restaurant) GetStoreTypeId() int32 {
	if x != nil {
		return x.StoreTypeId
	}
	return 0
}

func (x *Restaurant) GetIosCoverPhotoUrl() string {
	if x != nil {
		return x.IosCoverPhotoUrl
	}
	return ""
}

func (x *Restaurant) GetAndroidCoverPhotoUrl() string {
	if x != nil {
		return x.AndroidCoverPhotoUrl
	}
	return ""
}

func (x *Restaurant) GetEnabledReason() int32 {
	if x != nil {
		return x.EnabledReason
	}
	return 0
}

func (x *Restaurant) GetRestaurantType() int32 {
	if x != nil {
		return x.RestaurantType
	}
	return 0
}

func (x *Restaurant) GetVerticalId() int32 {
	if x != nil {
		return x.VerticalId
	}
	return 0
}

func (x *Restaurant) GetDisableOrderNote() bool {
	if x != nil {
		return x.DisableOrderNote
	}
	return false
}

type Restaurant_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid           string                         `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Source         string                         `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Action         Restaurant_Metadata_ActionType `protobuf:"varint,3,opt,name=action,proto3,enum=Restaurant_Metadata_ActionType" json:"action,omitempty"`
	EventTimestamp *timestamppb.Timestamp         `protobuf:"bytes,4,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
}

func (x *Restaurant_Metadata) Reset() {
	*x = Restaurant_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vendor_search_restaurant_restaurant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Restaurant_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Restaurant_Metadata) ProtoMessage() {}

func (x *Restaurant_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_search_restaurant_restaurant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Restaurant_Metadata.ProtoReflect.Descriptor instead.
func (*Restaurant_Metadata) Descriptor() ([]byte, []int) {
	return file_vendor_search_restaurant_restaurant_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Restaurant_Metadata) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *Restaurant_Metadata) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Restaurant_Metadata) GetAction() Restaurant_Metadata_ActionType {
	if x != nil {
		return x.Action
	}
	return Restaurant_Metadata_CREATE
}

func (x *Restaurant_Metadata) GetEventTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTimestamp
	}
	return nil
}

var File_vendor_search_restaurant_restaurant_proto protoreflect.FileDescriptor

var file_vendor_search_restaurant_restaurant_proto_rawDesc = []byte{
	0x0a, 0x29, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x0c, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61,
	0x6d, 0x65, 0x41, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x69, 0x6e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x75,
	0x62, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x41, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x61, 0x73, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x62, 0x69, 0x61, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x6c, 0x75, 0x67, 0x5f, 0x61, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6c, 0x75, 0x67, 0x41, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x74, 0x5f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x61,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x6f, 0x73, 0x5f, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6f, 0x73, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x1a, 0xe6, 0x01, 0x0a,
	0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43,
	0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x30, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x02, 0x42, 0x42, 0x5a, 0x18, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2d,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0xea, 0x02, 0x25, 0x50, 0x75, 0x62, 0x73, 0x75, 0x62, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x73, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_vendor_search_restaurant_restaurant_proto_rawDescOnce sync.Once
	file_vendor_search_restaurant_restaurant_proto_rawDescData = file_vendor_search_restaurant_restaurant_proto_rawDesc
)

func file_vendor_search_restaurant_restaurant_proto_rawDescGZIP() []byte {
	file_vendor_search_restaurant_restaurant_proto_rawDescOnce.Do(func() {
		file_vendor_search_restaurant_restaurant_proto_rawDescData = protoimpl.X.CompressGZIP(file_vendor_search_restaurant_restaurant_proto_rawDescData)
	})
	return file_vendor_search_restaurant_restaurant_proto_rawDescData
}

var file_vendor_search_restaurant_restaurant_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vendor_search_restaurant_restaurant_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_vendor_search_restaurant_restaurant_proto_goTypes = []interface{}{
	(Restaurant_Metadata_ActionType)(0), // 0: Restaurant.Metadata.ActionType
	(*Restaurant)(nil),                  // 1: Restaurant
	(*Restaurant_Metadata)(nil),         // 2: Restaurant.Metadata
	(*timestamppb.Timestamp)(nil),       // 3: google.protobuf.Timestamp
}
var file_vendor_search_restaurant_restaurant_proto_depIdxs = []int32{
	2, // 0: Restaurant.metadata:type_name -> Restaurant.Metadata
	3, // 1: Restaurant.created_at:type_name -> google.protobuf.Timestamp
	3, // 2: Restaurant.updated_at:type_name -> google.protobuf.Timestamp
	0, // 3: Restaurant.Metadata.action:type_name -> Restaurant.Metadata.ActionType
	3, // 4: Restaurant.Metadata.event_timestamp:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_vendor_search_restaurant_restaurant_proto_init() }
func file_vendor_search_restaurant_restaurant_proto_init() {
	if File_vendor_search_restaurant_restaurant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vendor_search_restaurant_restaurant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Restaurant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vendor_search_restaurant_restaurant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Restaurant_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vendor_search_restaurant_restaurant_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vendor_search_restaurant_restaurant_proto_goTypes,
		DependencyIndexes: file_vendor_search_restaurant_restaurant_proto_depIdxs,
		EnumInfos:         file_vendor_search_restaurant_restaurant_proto_enumTypes,
		MessageInfos:      file_vendor_search_restaurant_restaurant_proto_msgTypes,
	}.Build()
	File_vendor_search_restaurant_restaurant_proto = out.File
	file_vendor_search_restaurant_restaurant_proto_rawDesc = nil
	file_vendor_search_restaurant_restaurant_proto_goTypes = nil
	file_vendor_search_restaurant_restaurant_proto_depIdxs = nil
}
